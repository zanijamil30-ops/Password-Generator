# -*- coding: utf-8 -*-
"""password_generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wDnNTTZ9oHGARHIkWjHn8qaucRD3m92P
"""

# Install gradio if not already installed
# !pip install gradio

import string, secrets
import gradio as gr

def generate(length=12, upper=True, lower=True, digits=True, symbols=False):
    pool = ""
    if upper: pool += string.ascii_uppercase
    if lower: pool += string.ascii_lowercase
    if digits: pool += string.digits
    if symbols: pool += string.punctuation
    if not pool:
        return "‚ö†Ô∏è Select at least one character set"
    if length < 4:
        return "‚ö†Ô∏è Choose a length of at least 4"
    pw = ''.join(secrets.choice(pool) for _ in range(length))
    return pw

css = "#pw {font-size: 16px; padding: 10px;}"

demo = gr.Interface(
    fn=generate,
    inputs=[
        gr.Slider(4, 128, value=12, label="Length"),
        gr.Checkbox(value=True, label="Uppercase (A-Z)"),
        gr.Checkbox(value=True, label="Lowercase (a-z)"),
        gr.Checkbox(value=True, label="Digits (0-9)"),
        gr.Checkbox(value=False, label="Symbols (!@#...)")
    ],
    outputs=gr.Textbox(label="Generated password", elem_id="pw"),
    title="üîê Password Generator",
    description="Secure password generator using Python's secrets module.",
    css=css,
    flagging_mode='never'   # ‚úÖ use this instead of allow_flagging
)

demo.launch(share=True)